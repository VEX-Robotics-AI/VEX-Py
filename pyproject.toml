# peps.python.org/pep-0621
# packaging.python.org/en/latest/specifications/declaring-project-metadata


[project]


# GENERAL INFO
# ============

name = 'VEX-Py'

keywords = [
  'Robot Mesh',
  'VEXcode',
  'VEX',
  'Robotics',
]

readme = {file = 'README.md', content-type = 'text/markdown', charset = 'UTF-8'}


# AUTHOR(S)/MAINTAINER(S) & LICENSE
# =================================

authors = [
  {name = 'The Vinh LUONG (LƯƠNG Thế Vinh)', email = 'Vinh@STEAMforVietnam.org'}
]
maintainers = [
  {name = 'The Vinh LUONG (LƯƠNG Thế Vinh)', email = 'Vinh@STEAMforVietnam.org'},
  {name = 'STEAM for Vietnam Foundation: AI, IoT & Robotics Educational Initiative', email = 'Edu.Robotics@STEAMforVietnam.org'},
]

license = {file = 'LICENSE'}


# PYTHON VERSION REQUIREMENT
# ==========================

requires-python = '>= 3.12'


# DYNAMIC METADATA
# ================

dynamic = [
  # version
  'version',

  # description & trove classifiers
  'description',
  'classifiers',

  # dependencies
  'dependencies',
  'optional-dependencies',

  # entry points / scripts
  'entry-points',
  'scripts',
  'gui-scripts',
]


# URLs
# ====

[project.urls]
Homepage = 'https://GitHub.com/VEX-Robotics-AI/VEX-Py'
Documentation = 'https://GitHub.com/VEX-Robotics-AI/VEX-Py'
GitHub = 'https://GitHub.com/VEX-Robotics-AI/VEX-Py'
Repository = 'https://GitHub.com/VEX-Robotics-AI/VEX-Py'


# SETUPTOOLS-SPECIFIC CONFIG
# ==========================
# setuptools.pypa.io/en/latest/userguide/pyproject_config.html#setuptools-specific-configuration

[tool.setuptools]

# platforms = []  # array

zip-safe = true

# eager-resources = []  # array

py-modules = [
  'motor_group',
  'drivetrain',
  'smartdrive',
  'timer',
  'vision',
]

# packages = []  # array or find directive

# package-dir = {}  # table/inline-table, used when explicitly listing packages

# namespace-packages = []  # array, deprecated

package-data = {}  # table/inline-table

include-package-data = true

exclude-package-data = {}  # table/inline-table

license-files = ['LICEN[CS]E*']  # array of glob patterns

data-files = {}  # table/inline-table, discouraged

# script-files = []  # array, deprecated

provides = []  # array, ignored by pip

obsoletes = []  # array, ignored by pip


[tool.setuptools.packages.find]
where = ['src']
include = ['*']
exclude = []
namespaces = true


[tool.setuptools.dynamic]

# version
version = {file = 'metadata/version'}

# description & trove classifiers
description = {file = 'metadata/description'}
classifiers = {file = 'metadata/classifiers'}

# dependencies
dependencies = {file = 'metadata/requirements/base.txt'}

# entry points / scripts
entry-points = {file = 'metadata/entry-points'}

# optional depedendencies
[tool.setuptools.dynamic.optional-dependencies]
build = {file = 'metadata/requirements/build.txt'}
dev = {file = 'metadata/requirements/dev.txt'}
doc = {file = 'metadata/requirements/doc.txt'}
lint = {file = 'metadata/requirements/lint.txt'}
publish = {file = 'metadata/requirements/publish.txt'}
test = {file = 'metadata/requirements/test.txt'}


# BUILD SYSTEM
# (SetUpTools)
# ============

[build-system]
requires = [
  'SetUpTools >= 68.2.2',
  'Wheel >= 0.41.3',
]
build-backend = 'setuptools.build_meta'


# TESTING
# (PyTest)
# ========

[tool.pytest.ini_options]

addopts = [
  "--ignore-glob='**/.*.py'",
  # hidden test files containing code runnable on actual VEX Robotics hardware

  '--import-mode=importlib',
  # docs.pytest.org/en/latest/explanation/pythonpath.html
  # importlib: new in pytest-6.0, this mode uses more fine control mechanisms
  # provided by importlib to import test modules.
  # This gives full control over the import process,
  # and doesn’t require changing sys.path.
  # For this reason this doesn’t require test module names to be unique.
  # One drawback however is that test modules are non-importable by each other.
  # Also, utility modules in the tests directories are not automatically
  # importable because the tests directory is no longer added to sys.path.
  # Initially we intended to make importlib the default in future releases,
  # however it is clear now that it has its own set of drawbacks
  # so the default will remain prepend for the foreseeable future.
]

# docs.pytest.org/en/latest/example/pythoncollection.html#changing-naming-conventions
python_files = 'Test*.py test*.py'
python_classes = 'Test'
python_functions = 'test_*'

# docs.pytest.org/en/latest/explanation/goodpractices.html#tests-outside-application-code
pythonpath = 'src'

testpaths = [
  'test/**/*.py',
]
